#include "pch.h"
#include <iostream>
#include "algorithms.h"
#include "readFile.h"
#include "dataStructures.h"


void autoGeneratedCheck()
{
	srand(0);
	const int debugNumber = 10;

	for (int i = 0; i < debugNumber; i++)
	{
		if (0)
		{
			exit(1);
		}
	}
}

void deleteTMPData(const int linesRead, char *data[100])
{
	for (int i = 0; i < linesRead; ++i)
	{
		delete data[i];
	}
}

void checkFromFile()
{

	char *checkData[100] = {};
	const int checkDatalLinesRead = readFile("checkData.txt", checkData);

	char *resultData[100] = {};
	const int resultDatalLinesRead = readFile("resultData.txt", resultData);

	for (int linesCounter = 0; linesCounter < checkDatalLinesRead; linesCounter++)
	{
		// Ввод, вычисление, сохранение
		DoubleLinkedList list;

		char *data[100] = {};
		const int commandslinesRead = readFile(checkData[linesCounter], data);

		for (int i = 0; i < commandslinesRead; ++i)
		{
			int commandNumber = 0;
			processInputCommand(data[i], &list, &commandNumber);
		}

		FILE *outputDataFile = fopen("toCheckData.txt", "w");
		printAllData(&list, true, outputDataFile);
		fclose(outputDataFile);

		// Сверка

		char *result[100] = {};
		const int resultLinesRead = readFile(resultData[linesCounter], result);

		char *answer[100] = {};
		const int answerLinesRead = readFile("toCheckData.txt", answer);

		bool isSame = true;
		for (int i = 0; i < answerLinesRead; ++i)
		{
			if (strcmp(answer[i], result[i]) != 0)
			{
				isSame = false;
				break;
			}
		}
		// Оработка сверки

		if (!isSame)
		{
			printf("Mistakes\n");
			deleteTMPData(commandslinesRead, data);
			deleteTMPData(resultLinesRead, result);
			deleteTMPData(answerLinesRead, answer);
			deleteAllList(&list);
			exit(1);
		}

		// Удаление
		deleteTMPData(commandslinesRead, data);
		deleteTMPData(resultLinesRead, result);
		deleteTMPData(answerLinesRead, answer);
		deleteAllList(&list);
	}

	deleteTMPData(checkDatalLinesRead, checkData);
	deleteTMPData(resultDatalLinesRead, resultData);
}